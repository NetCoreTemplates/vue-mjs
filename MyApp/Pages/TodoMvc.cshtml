@page
@{
    ViewData["Title"] = "Todo MVC";
}

<div>
  <div class="mt-3 mx-auto max-w-lg">
    <h2 class="py-2 text-center text-3xl font-bold text-gray-900 dark:text-gray-100 sm:text-4xl">
      @ViewData["Title"]
    </h2>
    <div id="todomvc" class="mt-5"></div>
  </div>
  <div class="mt-5 flex justify-center">
      @Html.SrcPage("TodoMvc.mjs")
  </div>
  <h4 class="mt-8 text-center text-xl">
    <a href="/ui/QueryTodos" class="font-semibold text-indigo-600 hover:text-indigo-500">Manage Todos</a> in API Explorer
  </h4>
</div>

<template id="TodoMvc-template">
<div class="mb-3">
  <text-input :status="store.error" id="Text" v-model="store.newTodo" placeholder="What needs to be done?" label=""
             @@keyup.enter.stop="store.addTodo()" />
</div>

  <div class="bg-white shadow overflow-hidden rounded-md">
    <ul role="list" class="divide-y divide-gray-200">
      <li v-for="todo in store.filteredTodos()" :key="todo.id" class="px-6 py-4">
        <div class="relative flex items-start" @@click.stop="store.toggleTodo(todo.id)">
          <div class="flex items-center h-6">
            <svg v-if="todo.isFinished" class="cursor-pointer text-green-600 dark:text-green-400 h-5 w-5" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24">
              <path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2m-2 15l-5-5l1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9Z"></path>
            </svg>
            <svg v-else class="cursor-pointer h-5 w-5" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24">
              <path fill="currentColor" d="M12 20a8 8 0 0 1-8-8a8 8 0 0 1 8-8a8 8 0 0 1 8 8a8 8 0 0 1-8 8m0-18A10 10 0 0 0 2 12a10 10 0 0 0 10 10a10 10 0 0 0 10-10A10 10 0 0 0 12 2Z"></path>
            </svg>
          </div>
          <div class="ml-3 flex-grow cursor-pointer">
            <label :class="{'line-through':todo.isFinished}">{{ todo.text }}</label>
          </div>
          <div>
            <svg class="cursor-pointer h-5 w-5" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"
                 @@click.stop="store.removeTodo(todo.id)">
              <path fill="currentColor" d="M9 3v1H4v2h1v13a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6h1V4h-5V3H9M7 6h10v13H7V6m2 2v9h2V8H9m4 0v9h2V8h-2Z"></path>
            </svg>
          </div>
        </div>
      </li>
    </ul>
  </div>

<div class="mt-4 flex justify-between">
  <div class="text-gray-400 leading-8 mr-4">
    {{ store.unfinishedTodos().length }} <span class="hidden sm:inline">item(s)</span> left
  </div>

  <div class="inline-flex shadow-sm rounded-md">
    <filter-tab class="rounded-l-lg border" filter="all">
      All
    </filter-tab>
    <filter-tab class="border-t border-b" filter="unfinished">
      Active
    </filter-tab>
    <filter-tab class="rounded-r-md border" filter="finished">
      Completed
    </filter-tab>
  </div>

  <div class="leading-8 ml-4">
    <a href="#" :class="{ invisible: store.finishedTodos().length === 0 }" @@click.prevent="store.removeFinishedTodos()">
      clear <span class="hidden sm:inline">completed</span>
    </a>
  </div>
</div>
</template>

<script>todos = @((await Gateway.SendAsync(new QueryTodos())).Results.AsRawJson())</script>
<script type="module">
import TodoMvc from "/Pages/TodoMvc.mjs"
import { mount } from "/mjs/app.mjs"
mount('#todomvc', TodoMvc, { todos })
</script>
